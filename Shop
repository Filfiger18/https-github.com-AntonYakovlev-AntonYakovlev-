from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///store.db'
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    email = db.Column(db.String(100), nullable=False)
    entry_time = db.Column(db.DateTime, default=datetime.utcnow)
    exit_time = db.Column(db.DateTime, nullable=True)

class Product(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    price = db.Column(db.Float, nullable=False)

class Activity(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    product_id = db.Column(db.Integer, db.ForeignKey('product.id'), nullable=False)
    action = db.Column(db.String(50), nullable=False)  # "viewed", "wanted_to_buy", "bought"
    timestamp = db.Column(db.DateTime, default=datetime.utcnow)

db.create_all()

@app.route('/enter', methods=['POST'])
def enter_store():
    email = request.json['email']
    user = User(email=email)
    db.session.add(user)
    db.session.commit()
    return jsonify({'message': 'User entered', 'user_id': user.id})

@app.route('/exit', methods=['POST'])
def exit_store():
    user_id = request.json['user_id']
    user = User.query.get(user_id)
    user.exit_time = datetime.utcnow()
    db.session.commit()
    return jsonify({'message': 'User exited'})

@app.route('/activity', methods=['POST'])
def log_activity():
    user_id = request.json['user_id']
    product_id = request.json['product_id']
    action = request.json['action']
    activity = Activity(user_id=user_id, product_id=product_id, action=action)
    db.session.add(activity)
    db.session.commit()
    return jsonify({'message': 'Activity logged'})

@app.route('/report', methods=['GET'])
def report():
    users = User.query.all()
    activities = Activity.query.all()
    report_data = {
        'total_users': len(users),
        'users': [{'id': user.id, 'email': user.email, 'entry_time': user.entry_time, 'exit_time': user.exit_time} for user in users],
        'activities': [{'user_id': activity.user_id, 'product_id': activity.product_id, 'action': activity.action, 'timestamp': activity.timestamp} for activity in activities]
    }
    return jsonify(report_data)

if __name__ == '__main__':
    app.run(debug=True)
